"use strict";
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.verifyNonce = void 0;
const Utils = __importStar(require("../../primitives/utils.js"));
/**
 * Verifies a nonce derived from a wallet
 * @param nonce - A nonce to verify as a base64 string.
 * @param wallet
 * @param counterparty - The counterparty to the nonce creation. Defaults to 'self'.
 * @returns The status of the validation
 */
async function verifyNonce(nonce, wallet, counterparty = 'self') {
    // Convert nonce from base64 string to Uint8Array
    const buffer = Utils.toArray(nonce, 'base64');
    // Split the nonce buffer
    const data = buffer.slice(0, 16);
    const hmac = buffer.slice(16);
    // Calculate the HMAC
    const { valid } = await wallet.verifyHmac({
        data,
        hmac,
        protocolID: [2, 'server hmac'],
        keyID: Utils.toUTF8(data),
        counterparty
    });
    return valid;
}
exports.verifyNonce = verifyNonce;
//# sourceMappingURL=verifyNonce.js.map