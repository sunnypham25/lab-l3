import { Monitor } from '../Monitor';
import { WalletMonitorTask } from './WalletMonitorTask';
/**
 * `TaskCheckNoSends` is a WalletMonitor task that retreives merkle proofs for
 * 'nosend' transactions that MAY have been shared externally.
 *
 * Unlike intentionally processed transactions, 'nosend' transactions are fully valid
 * transactions which have not been processed by the wallet.
 *
 * By default, this task runs once a day to check if any 'nosend' transaction has
 * managed to get mined by some external process.
 *
 * If a proof is obtained and validated, a new ProvenTx record is created and
 * the original ProvenTxReq status is advanced to 'notifying'.
 */
export declare class TaskCheckNoSends extends WalletMonitorTask {
    triggerMsecs: number;
    static taskName: string;
    /**
     * An external service such as the chaintracks new block header
     * listener can set this true to cause
     */
    static checkNow: boolean;
    constructor(monitor: Monitor, triggerMsecs?: number);
    /**
     * Normally triggered by checkNow getting set by new block header found event from chaintracks
     */
    trigger(nowMsecsSinceEpoch: number): {
        run: boolean;
    };
    runTask(): Promise<string>;
}
//# sourceMappingURL=TaskCheckNoSends.d.ts.map