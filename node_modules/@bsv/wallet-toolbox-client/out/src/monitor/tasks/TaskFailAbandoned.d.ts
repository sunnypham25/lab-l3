import { Monitor } from '../Monitor';
import { WalletMonitorTask } from './WalletMonitorTask';
/**
 * Handles transactions which do not have terminal status and have not been
 * updated for an extended time period.
 *
 * Calls `updateTransactionStatus` to set `status` to `failed`.
 * This returns inputs to spendable status and verifies that any
 * outputs are not spendable.
 */
export declare class TaskFailAbandoned extends WalletMonitorTask {
    triggerMsecs: number;
    static taskName: string;
    constructor(monitor: Monitor, triggerMsecs?: number);
    trigger(nowMsecsSinceEpoch: number): {
        run: boolean;
    };
    runTask(): Promise<string>;
}
//# sourceMappingURL=TaskFailAbandoned.d.ts.map