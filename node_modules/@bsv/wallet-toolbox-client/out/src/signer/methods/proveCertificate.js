"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.proveCertificate = proveCertificate;
const sdk_1 = require("@bsv/sdk");
const index_client_1 = require("../../index.client");
async function proveCertificate(wallet, auth, vargs) {
    const lcargs = {
        partial: {
            type: vargs.type,
            serialNumber: vargs.serialNumber,
            certifier: vargs.certifier,
            subject: vargs.subject,
            revocationOutpoint: vargs.revocationOutpoint,
            signature: vargs.signature
        },
        certifiers: [],
        types: [],
        limit: 2,
        offset: 0,
        privileged: false
    };
    const lcr = await wallet.storage.listCertificates(lcargs);
    if (lcr.certificates.length != 1)
        throw new index_client_1.sdk.WERR_INVALID_PARAMETER('args', `a unique certificate match`);
    const storageCert = lcr.certificates[0];
    const keyringForVerifier = await sdk_1.MasterCertificate.createKeyringForVerifier(wallet, storageCert.certifier, vargs.verifier, storageCert.fields, vargs.fieldsToReveal, storageCert.keyring, storageCert.serialNumber, vargs.privileged, vargs.privilegedReason);
    return { keyringForVerifier };
}
//# sourceMappingURL=proveCertificate.js.map