"use strict";
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
const WalletWireCalls_js_1 = __importDefault(require("./WalletWireCalls.js"));
const Utils = __importStar(require("../../primitives/utils.js"));
class HTTPWalletWire {
    constructor(originator, baseUrl = 'http://localhost:3301', httpClient = fetch) {
        this.baseUrl = baseUrl;
        this.httpClient = httpClient;
        this.originator = originator;
    }
    async transmitToWallet(message) {
        const messageReader = new Utils.Reader(message);
        // Read call code
        const callCode = messageReader.readUInt8();
        // Map call code to call name
        const callName = WalletWireCalls_js_1.default[callCode]; // calls is enum
        if (callName === undefined || callName === '') {
            // Invalid call code
            throw new Error(`Invalid call code: ${callCode}`);
        }
        // Read originator length
        const originatorLength = messageReader.readUInt8();
        let originator;
        if (originatorLength > 0) {
            const originatorBytes = messageReader.read(originatorLength);
            originator = Utils.toUTF8(originatorBytes);
        }
        const payload = messageReader.read();
        const response = await fetch(`${this.baseUrl}/${callName}`, {
            method: 'POST',
            headers: {
                'Content-Type': 'application/octet-stream',
                Origin: originator ?? '' // âœ… Explicitly handle null/undefined cases
            },
            body: new Uint8Array(payload)
        });
        const responseBuffer = await response.arrayBuffer();
        return Array.from(new Uint8Array(responseBuffer));
    }
}
exports.default = HTTPWalletWire;
//# sourceMappingURL=HTTPWalletWire.js.map