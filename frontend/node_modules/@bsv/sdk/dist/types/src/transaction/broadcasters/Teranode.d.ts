import { BroadcastResponse, BroadcastFailure, Broadcaster } from '../Broadcaster.js';
import Transaction from '../Transaction.js';
import { HttpClient } from '../http/index.js';
/**
 * Represents an Teranode transaction broadcaster.
 */
export default class Teranode implements Broadcaster {
    readonly URL: string;
    readonly httpClient: HttpClient;
    /**
     * Constructs an instance of the Teranode broadcaster.
     *
     * @param {string} URL - The URL endpoint for the Teranode API.
     * @param {HttpClient} httpClient - The HTTP client used to make requests to the API, binaryHttpClient by default.
     */
    constructor(URL: string, httpClient?: HttpClient);
    /**
     * Broadcasts a transaction via Teranode.
     *
     * @param {Transaction} tx - The transaction to be broadcasted.
     * @returns {Promise<BroadcastResponse | BroadcastFailure>} A promise that resolves to either a success or failure response.
     */
    broadcast(tx: Transaction): Promise<BroadcastResponse | BroadcastFailure>;
}
//# sourceMappingURL=Teranode.d.ts.map