export interface DownloaderConfig {
    networkPreset: 'mainnet' | 'testnet' | 'local';
}
export interface DownloadResult {
    data: number[];
    mimeType: string | null;
}
export declare class StorageDownloader {
    private readonly networkPreset?;
    constructor(config?: DownloaderConfig);
    /**
     * Resolves the UHRP URL to a list of HTTP URLs where content can be downloaded.
     * @param uhrpUrl The UHRP URL to resolve.
     * @returns A promise that resolves to an array of HTTP URLs.
     */
    resolve(uhrpUrl: string): Promise<string[]>;
    /**
     * Downloads the content from the UHRP URL after validating the hash for integrity.
     * @param uhrpUrl The UHRP URL to download.
     * @returns A promise that resolves to the downloaded content.
     */
    download(uhrpUrl: string): Promise<DownloadResult>;
}
//# sourceMappingURL=StorageDownloader.d.ts.map